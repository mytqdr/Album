/*
 * JSP generated by Resin Professional 4.0.44 (built Wed, 22 Apr 2015 02:04:40 PDT)
 */

package _jsp;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.util.*;

public class _111__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  private boolean _caucho_isNotModified;
  private com.caucho.jsp.PageManager _jsp_pageManager;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    com.caucho.jsp.PageContextImpl pageContext = _jsp_pageManager.allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);

    TagState _jsp_state = null;

    try {
      _jspService(request, response, pageContext, _jsp_application, session, _jsp_state);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_pageManager.freePageContext(pageContext);
    }
  }
  
  private void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response,
              com.caucho.jsp.PageContextImpl pageContext,
              javax.servlet.ServletContext application,
              javax.servlet.http.HttpSession session,
              TagState _jsp_state)
    throws Throwable
  {
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    javax.servlet.jsp.tagext.JspTag _jsp_parent_tag = null;
    com.caucho.jsp.PageContextImpl _jsp_parentContext = pageContext;
    response.setContentType("text/html");
    response.setCharacterEncoding("utf-8");

    out.write(_jsp_string0, 0, _jsp_string0.length);
    
		Map<String, Object> map = new HashMap<String, Object>();

		String ServerName = request.getServerName();
		map.put("ServerName:", ServerName);

		String ServerInfo = getServletContext().getServerInfo();
		map.put("ServerInfo:", ServerInfo);

		String Protocol = request.getProtocol();
		map.put("Protocol:", Protocol);

		Integer ServerPort = request.getServerPort();
		map.put("ServerPort:", ServerPort);

		String Method = request.getMethod();
		map.put("Method:", Method);

		String pathInfo = request.getPathInfo();
		map.put("pathInfo:", pathInfo);

		String PathTranslated = request.getPathTranslated();
		map.put("PathTranslated:", PathTranslated);

		String ServletPath = request.getServletPath();
		map.put("ServletPath:", ServletPath);

		String CharacterEncoding = request.getCharacterEncoding();
		map.put("CharacterEncoding:", CharacterEncoding);

		String QueryString = request.getQueryString();
		map.put("QueryString:", QueryString);

		String RemoteHost = request.getRemoteHost();
		map.put("RemoteHost:", RemoteHost);

		String RemoteAddr = request.getRemoteAddr();
		map.put("RemoteAddr:", RemoteAddr);

		String AuthType = request.getAuthType();
		map.put("AuthType:", AuthType);

		String RemoteUser = request.getRemoteUser();
		map.put("RemoteUser:", RemoteUser);

		String ContentType = request.getContentType();
		map.put("ContentType:", ContentType);

		Integer ContentLength = request.getContentLength();
		map.put("ContentLength:", ContentLength);

		String Accept = request.getHeader("Accept");
		map.put("Accept:", Accept);

		String UserAgent = request.getHeader("User-Agent");
		map.put("UserAgent:", UserAgent);

		String Referer = request.getHeader("Referer");
		map.put("Referer:", Referer);

		Iterator<String> it = map.keySet().iterator();
	
    out.write(_jsp_string1, 0, _jsp_string1.length);
    
		while (it.hasNext()) {
			Object o = it.next();
	
    out.write(_jsp_string2, 0, _jsp_string2.length);
    out.print((o));
    out.write(_jsp_string2, 0, _jsp_string2.length);
    out.print((map.get(o)));
    out.write(_jsp_string1, 0, _jsp_string1.length);
    
		out.println("<br>");
		}
	
    out.write(_jsp_string3, 0, _jsp_string3.length);
    _caucho_expr_0.print(out, _jsp_env, false);
    out.write(_jsp_string4, 0, _jsp_string4.length);
    _caucho_expr_1.print(out, _jsp_env, false);
    out.write(_jsp_string5, 0, _jsp_string5.length);
    _caucho_expr_2.print(out, _jsp_env, false);
    out.write(_jsp_string6, 0, _jsp_string6.length);
    _caucho_expr_3.print(out, _jsp_env, false);
    out.write(_jsp_string7, 0, _jsp_string7.length);
    _caucho_expr_4.print(out, _jsp_env, false);
    out.write(_jsp_string8, 0, _jsp_string8.length);
    _caucho_expr_5.print(out, _jsp_env, false);
    out.write(_jsp_string9, 0, _jsp_string9.length);
    _caucho_expr_6.print(out, _jsp_env, false);
    out.write(_jsp_string10, 0, _jsp_string10.length);
    _caucho_expr_7.print(out, _jsp_env, false);
    out.write(_jsp_string11, 0, _jsp_string11.length);
    _caucho_expr_8.print(out, _jsp_env, false);
    out.write(_jsp_string12, 0, _jsp_string12.length);
    _caucho_expr_9.print(out, _jsp_env, false);
    out.write(_jsp_string13, 0, _jsp_string13.length);
    _caucho_expr_10.print(out, _jsp_env, false);
    out.write(_jsp_string14, 0, _jsp_string14.length);
    _caucho_expr_11.print(out, _jsp_env, false);
    out.write(_jsp_string15, 0, _jsp_string15.length);
    _caucho_expr_12.print(out, _jsp_env, false);
    out.write(_jsp_string16, 0, _jsp_string16.length);
    _caucho_expr_13.print(out, _jsp_env, false);
    out.write(_jsp_string17, 0, _jsp_string17.length);
    _caucho_expr_14.print(out, _jsp_env, false);
    out.write(_jsp_string18, 0, _jsp_string18.length);
    _caucho_expr_15.print(out, _jsp_env, false);
    out.write(_jsp_string19, 0, _jsp_string19.length);
    _caucho_expr_16.print(out, _jsp_env, false);
    out.write(_jsp_string20, 0, _jsp_string20.length);
  }

  private com.caucho.make.DependencyContainer _caucho_depends
    = new com.caucho.make.DependencyContainer();

  public java.util.ArrayList<com.caucho.vfs.Dependency> _caucho_getDependList()
  {
    return _caucho_depends.getDependencies();
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    _caucho_depends.add(depend);
  }

  protected void _caucho_setNeverModified(boolean isNotModified)
  {
    _caucho_isNotModified = true;
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;

    if (_caucho_isNotModified)
      return false;

    if (com.caucho.server.util.CauchoSystem.getVersionId() != -7371470110589488364L)
      return true;

    return _caucho_depends.isModified();
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
    TagState tagState;
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("111.jsp"), 6655272240639744510L, false);
    _caucho_depends.add(depend);
  }

  final static class TagState {

    void release()
    {
    }
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void caucho_init(ServletConfig config)
  {
    try {
      com.caucho.server.webapp.WebApp webApp
        = (com.caucho.server.webapp.WebApp) config.getServletContext();
      init(config);
      if (com.caucho.jsp.JspManager.getCheckInterval() >= 0)
        _caucho_depends.setCheckInterval(com.caucho.jsp.JspManager.getCheckInterval());
      _jsp_pageManager = webApp.getJspApplicationContext().getPageManager();
      com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
      com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.InitPageContextImpl(webApp, this);
      _caucho_expr_0 = com.caucho.jsp.JspUtil.createExpr(pageContext.getELContext(), "${pageContext.request.queryString}");
      _caucho_expr_1 = com.caucho.jsp.JspUtil.createExpr(pageContext.getELContext(), "${pageContext.request.requestURL}");
      _caucho_expr_2 = com.caucho.jsp.JspUtil.createExpr(pageContext.getELContext(), "${pageContext.request.contextPath}");
      _caucho_expr_3 = com.caucho.jsp.JspUtil.createExpr(pageContext.getELContext(), "${pageContext.request.method}");
      _caucho_expr_4 = com.caucho.jsp.JspUtil.createExpr(pageContext.getELContext(), "${pageContext.request.protocol}");
      _caucho_expr_5 = com.caucho.jsp.JspUtil.createExpr(pageContext.getELContext(), "${pageContext.session.id}");
      _caucho_expr_6 = com.caucho.jsp.JspUtil.createExpr(pageContext.getELContext(), "${header[\"User-Agent\"]}");
      _caucho_expr_7 = com.caucho.jsp.JspUtil.createExpr(pageContext.getELContext(), "${header[\"Host\"]}");
      _caucho_expr_8 = com.caucho.jsp.JspUtil.createExpr(pageContext.getELContext(), "${pageContext.request.serverName}");
      _caucho_expr_9 = com.caucho.jsp.JspUtil.createExpr(pageContext.getELContext(), "${pageContext.request.serverPort}");
      _caucho_expr_10 = com.caucho.jsp.JspUtil.createExpr(pageContext.getELContext(), "${pageContext.request.remoteUser}");
      _caucho_expr_11 = com.caucho.jsp.JspUtil.createExpr(pageContext.getELContext(), "${pageContext.request.remoteAddr }");
      _caucho_expr_12 = com.caucho.jsp.JspUtil.createExpr(pageContext.getELContext(), "${pageContext.request.remoteHost}");
      _caucho_expr_13 = com.caucho.jsp.JspUtil.createExpr(pageContext.getELContext(), "${pageContext.servletContext.serverInfo}");
      _caucho_expr_14 = com.caucho.jsp.JspUtil.createExpr(pageContext.getELContext(), "${pageContext.request.localAddr}");
      _caucho_expr_15 = com.caucho.jsp.JspUtil.createExpr(pageContext.getELContext(), "${pageContext.request.localName}");
      _caucho_expr_16 = com.caucho.jsp.JspUtil.createExpr(pageContext.getELContext(), "${pageContext.request.localPort}");
    } catch (Exception e) {
      throw com.caucho.config.ConfigException.create(e);
    }
  }
  private static com.caucho.el.Expr _caucho_expr_0;
  private static com.caucho.el.Expr _caucho_expr_1;
  private static com.caucho.el.Expr _caucho_expr_2;
  private static com.caucho.el.Expr _caucho_expr_3;
  private static com.caucho.el.Expr _caucho_expr_4;
  private static com.caucho.el.Expr _caucho_expr_5;
  private static com.caucho.el.Expr _caucho_expr_6;
  private static com.caucho.el.Expr _caucho_expr_7;
  private static com.caucho.el.Expr _caucho_expr_8;
  private static com.caucho.el.Expr _caucho_expr_9;
  private static com.caucho.el.Expr _caucho_expr_10;
  private static com.caucho.el.Expr _caucho_expr_11;
  private static com.caucho.el.Expr _caucho_expr_12;
  private static com.caucho.el.Expr _caucho_expr_13;
  private static com.caucho.el.Expr _caucho_expr_14;
  private static com.caucho.el.Expr _caucho_expr_15;
  private static com.caucho.el.Expr _caucho_expr_16;

  private final static char []_jsp_string3;
  private final static char []_jsp_string16;
  private final static char []_jsp_string2;
  private final static char []_jsp_string5;
  private final static char []_jsp_string6;
  private final static char []_jsp_string8;
  private final static char []_jsp_string11;
  private final static char []_jsp_string13;
  private final static char []_jsp_string4;
  private final static char []_jsp_string10;
  private final static char []_jsp_string12;
  private final static char []_jsp_string7;
  private final static char []_jsp_string17;
  private final static char []_jsp_string15;
  private final static char []_jsp_string1;
  private final static char []_jsp_string14;
  private final static char []_jsp_string18;
  private final static char []_jsp_string9;
  private final static char []_jsp_string0;
  private final static char []_jsp_string20;
  private final static char []_jsp_string19;
  static {
    _jsp_string3 = "\r\n	<h3>JSTL\ufffd\ufffd\u02bd\ufffd\ufffd</h3>\r\n	|request\ufffd\ufffd\ufffd{pageContext.request}\r\n	<br> |session\ufffd\ufffd\ufffd{pageContext.session}\r\n	<br> |queryString\ufffd\ufffd".toCharArray();
    _jsp_string16 = "\r\n	<br> |serverInfo\ufffd\ufffd".toCharArray();
    _jsp_string2 = "\r\n	".toCharArray();
    _jsp_string5 = "\r\n	<br> |contextPath\ufffd\ufffd".toCharArray();
    _jsp_string6 = "\r\n	<br> |method(GET\ufffd\ufffdPOST)\ufffd\ufffd".toCharArray();
    _jsp_string8 = "\r\n	<br> |session\ufffd\ufffdD\ufffd\ufffd".toCharArray();
    _jsp_string11 = "\r\n	<br> |serverName\ufffd\ufffd".toCharArray();
    _jsp_string13 = "\r\n	<br> |remoteUser\ufffd\ufffd".toCharArray();
    _jsp_string4 = "\r\n	<br> |requestUR\ufffd\ufffd".toCharArray();
    _jsp_string10 = "\r\n	<br> |Host\ufffd\ufffd".toCharArray();
    _jsp_string12 = "\r\n	<br> |serverPort\ufffd\ufffd".toCharArray();
    _jsp_string7 = "\r\n	<br> |protocol(HTTP/1.1\ufffd\ufffdHTTP/1.0)\ufffd\ufffd".toCharArray();
    _jsp_string17 = "\r\n	<br> |localAddr\ufffd\ufffd".toCharArray();
    _jsp_string15 = "\r\n	<br> |remoteHost\ufffd\ufffd".toCharArray();
    _jsp_string1 = "\r\n\r\n	".toCharArray();
    _jsp_string14 = "\r\n	<br> |remoteAddr\ufffd\ufffd".toCharArray();
    _jsp_string18 = "\r\n	<br> |localName\ufffd\ufffd".toCharArray();
    _jsp_string9 = "\r\n	<br> |User-Agent\ufffd\ufffd".toCharArray();
    _jsp_string0 = "\r\n<!DOCTYPE html>\r\n\r\n<html lang=\"zh\">\r\n<head>\r\n<meta charset=\"utf-8\">\r\n<title>JSP\ufffd\ufffdSTL\ufffd\ufffd\ufffd\ufffd\ufffditle>\r\n</head>\r\n<body>\r\n	<h3>JSP\ufffd\ufffd\u02bd:</h3>\r\n	".toCharArray();
    _jsp_string20 = "\r\n\r\n</body>\r\n\r\n</html>".toCharArray();
    _jsp_string19 = "\r\n	<br> |localPort\ufffd\ufffd".toCharArray();
  }
}
